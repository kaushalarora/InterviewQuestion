*******************************************************************************************************Capgemini interview*******************************************************************************************************

write a program to reverse this string 
WRP to sum this number - 1234
check the palindrome of - MOM 
write a full entity class
@Entity
Public Class Student{
	@Id
	@GeneratedValue(stratergy=GenerationType.AUTO)
	Private int id;
	Private String name;
	Private int age;
	Private int rollNo;
 
	Public Student(){};	
	Public void setName();
}
what is @transactional annotation in spring boot
difference between spring boot and microservices
what is autowired annotation in spring?
what is a spring container in a spring boot?
what is spring configuration in spring boot
Bean life cycle in Java Spring
what is hashcode
what is treeset
method overloading and overriding
difference between coupling and cohesion
what are enums
what is serialversionuid and how to generate it

*******************************************************************************************************Infosys Interview*******************************************************************************************************
employee_id	first_name	last_name	dept_id	manager_id	salary	expertise
100	John	White	IT	103	120000	Senior
101	Mary	Danner	Account	109	80000	junior
102	Ann	Lynn	Sales	107	140000	Semisenior
103	Peter	O'connor	IT	110	130000	Senior
106	Sue	Sanchez	Sales	107	110000	Junior
107	Marta	Doe	Sales	110	180000	Senior

Fetch the first 5 records.
select * from emp order by employee limit 5;
select * from emp where salary > 12000; and expertise = 'senior';
select max(salary) from employee where salary not in (select max(salary) from employee);
select * from emp where salary = (select max(salary) from employee);
What is the output of the below code?
public class Customer {
	String name;
	int age;
	
	Customer(String name,int age)
	{'
		this.name=name;
		this.age=age;
	}
	
	public static void main(String[] args) {
	Customer c1= new Customer("John",20);
	Customer c2= new Customer("John",20);
	
	HashSet<Customer> customerSet=new HashSet<>();
	customerSet.add(c1);
	customerSet.add(c2);
	
	System.out.println(customerSet.size());
	}
	// getters and setters
}
Sort customers on the basis of params in Java 7/8
class Emp implements Comparable{
int age;
String name;

Emp compareTo (Object o)
	return this.getAge() > o.getAge();
}

public static void main(String arg[]){
}
list.stream().filter( emp -> emp.getAge).collect(Collectors.toList);

*******************************************************************************************************TCS Interview*******************************************************************************************************
second highest salary 
select Max(salary) from tableName where salary < (select Max(salary) from tablName);
agile methodology steps
can we have static variables and methods in the abstract class
can we use static method in Java
what will happen if we remove the static keyword from the main method?

can we call a static method from a non-static method - yes, but we can not call a non-static method from the static method without creating an instance.
can we inherit static method in Java - yes, overload method only, override leads to method hiding
Why canâ€™t we override static methods in Java? - This is because static methods are not associated with the instance of a class, but with the class itself
What happens if I declare a static method in a subclass with the same signature as in the superclass? - the method in the subclass hides the one 
in the superclass.
Can I use the @Override annotation for static methods in Java? -- No
How should I access a static method defined in a superclass from a subclass - both methods are always accessible directly 
via their respective class names
marker interface.
How does method invocation differ between static and instance methods in Java? - Static methods can be called without the object of the class. 
Instance methods require an object of the class.
Coupling, Cohesion, Association, Aggregation, Composition
Difference between abstract class and interface
types of inheritance in Java
prototype, singleton scope of bean in spring
Stream supports many aggregate operations like filter, map, limit, reduce, find, and match to customize the 
original data into a different form according to the needs of the programmer.
